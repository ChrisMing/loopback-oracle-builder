#!/bin/bash

thisdir=$(dirname "${BASH_SOURCE[0]}")
export BUILD_PACKAGE="asteroid-oracle"
export BUILD_VERSION=$(cat $thisdir/../VERSION)

ORA_PACKAGES_DIR=$(cd -P -- "$thisdir/../deps/oracle" && pwd -P)

BUILD_PLATFORM="Unknown"
BUILD_OS="Unknown"
BUILD_ARCH="Unknown"



#
#  Print error message and exit with the specified code.
#
#  Examples:
#    die 'This sucks!' 101
#
function die() {
  [ -n "$1" ] && echo "$1"
  exit ${2:-"-1"}

}  #  End of function  die.


#
#  Prints the specified message - formatted.
#
#  Examples:
#    print_message "Initializing ..."
#
function print_message() {
  # echo "$@" | sed "s/^/\t/"
  if [ -n "$@" ]; then
    echo "  $@"
  else
    echo ""
  fi

  return 0

}  #  End of function  print_message.


#
#  Checks if the linux distro is Ubuntu.
#
#  Examples:
#    ubuntu_check
#
function ubuntu_check() {
  local etc_issue="/etc/issue"
  local ubuntu_rel="/usr/bin/lsb_release"
  [ -f "$etc_issue" ] && desc=$(cat "$etc_issue" | sed 's/\\[a-z]//g')
  [ -z "$desc" ] && [ -f "$ubuntu_rel" ] && \
    desc=$($ubuntu_rel -d 2> /dev/null | sed 's/Description\:\s*//g')

  if [[ "$desc" =~ Ubuntu.* ]]; then
    export BUILD_PLATFORM="Ubuntu"
    return 0
  fi

  return 1

}  #  End of function  ubuntu_check.


#
#  Checks if the linux distro is RHEL.
#
#  Examples:
#    rhel_check
#
function rhel_check() {
  local rhel_release="/etc/redhat-release"
  [ -f "$rhel_release" ] || return 1

  local rhelre='s/\(Red\s*Hat\)[^0-9\.]*\([0-9\.]*\).*/RHEL \2/g'
  local rhelver=$(cat $rhel_release | sed "$rhelre")
  if [[ "$rhelver" =~ RHEL.* ]]; then
    export BUILD_PLATFORM="RHEL"
    return 0
  else
    if [[ "$rhelver" =~ Fedora.* ]]; then
      export BUILD_PLATFORM="RHEL"
      return 0
    fi
  fi

  return 1

}  #  End of function  rhel_check.




#
#  Determine linux distro.
#
#  Examples:
#    determine_linux_distro
#
function determine_linux_distro() {
  #  Check if we have uname.
  $(which uname > /dev/null 2>&1) || return 1

  export BUILD_OS=$(uname -s)
  if [[ "$BUILD_OS" =~ Linux.* ]]; then
    export BUILD_ARCH=$(uname -m)
    ubuntu_check || rhel_check || return 1
    return 0
  fi

  return 1

}  #  End of function  determine_linux_distro.


#
#  Determine if Mac OSX
#
#  Examples:
#    check_macosx
#
function check_macosx() {
  #  Check if we have uname.
  $(which uname > /dev/null 2>&1) || return 1

  export BUILD_OS=$(uname -s)
  if [ "$BUILD_OS" = "Darwin" ]; then
    export BUILD_ARCH=$(uname -m)
    export BUILD_PLATFORM="MacOSX"
    return 0
  fi

  return 1

}  #  End of function  determine_linux_distro.


#
#  Print env variables for package, version, platform, os and architecture.
#
#  Examples:
#    print_env_variables
#
function print_env_variables() {
   print_message "-  Package = $BUILD_PACKAGE"
   print_message "-  Version = $BUILD_VERSION"
   print_message "- Platform = $BUILD_PLATFORM"
   print_message "-       OS = $BUILD_OS"
   print_message "-     Arch = $BUILD_ARCH"

}  #  End of function  print_env_variables.


#
#
#  Detects the platform we are running the build on.
#
#  Examples:
#    detect_platform
#
function detect_platform() {
  determine_linux_distro || check_macosx || die "Unsupported platform";
  print_env_variables
  return 0

}  #  End of function  detect_platform.


