#!/bin/bash

thisdir=$(dirname "${BASH_SOURCE[0]}")
export BUILD_PACKAGE="loopback-oracle"
export BUILD_VERSION=$(cat $thisdir/../VERSION)

ORA_PACKAGES_DIR=$(cd -P -- "$thisdir/../deps/oracle" && pwd -P)

BUILD_OS="Unknown"
BUILD_ARCH="Unknown"
BUILD_PLATFORM="Unknown"

#
#  Print error message and exit with the specified code.
#
#  Examples:
#    die 'This sucks!' 101
#
function die() {
  [ -n "$1" ] && echo "$1"
  exit ${2:-"-1"}

}  #  End of function  die.


#
#  Prints the specified message - formatted.
#
#  Examples:
#    print_message "Initializing ..."
#
function print_message() {
  # echo "$@" | sed "s/^/\t/"
  if [ -n "$@" ]; then
    echo "  $@"
  else
    echo ""
  fi

  return 0

}  #  End of function  print_message.


#
#  Determine linux distro.
#
#  Examples:
#    determine_linux_distro
#
function determine_linux_distro() {
  #  Check if we have uname.
  $(which uname > /dev/null 2>&1) || return 1

  export BUILD_OS=$(uname -s)
  if [[ "$BUILD_OS" =~ Linux.* ]]; then
    export BUILD_ARCH=$(uname -m)
    export BUILD_PLATFORM="Linux"
    return 0
  fi

  return 1

}  #  End of function  determine_linux_distro.


#
#  Determine if Mac OSX
#
#  Examples:
#    check_macosx
#
function check_macosx() {
  #  Check if we have uname.
  $(which uname > /dev/null 2>&1) || return 1

  export BUILD_OS=$(uname -s)
  if [ "$BUILD_OS" = "Darwin" ]; then
    export BUILD_ARCH=$(uname -m)
    export BUILD_PLATFORM="MacOSX"
    return 0
  fi

  return 1

}  #  End of function  determine_linux_distro.

function check_windows() {
  #  Check if we have uname.
  $(which uname > /dev/null 2>&1) || return 1

  export BUILD_OS=$(uname -s)
  if [ "$BUILD_OS" = "CYGWIN_NT-6.1-WOW64" ]; then
    export BUILD_ARCH=$(uname -m)
    export BUILD_PLATFORM="Windows"
    return 0
  fi

  return 1

}  #  End of function  determine_linux_distro.


#
#  Print env variables for package, version, platform, os and architecture.
#
#  Examples:
#    print_env_variables
#
function print_env_variables() {
   print_message "-  Package = $BUILD_PACKAGE"
   print_message "-  Version = $BUILD_VERSION"
   print_message "- Platform = $BUILD_PLATFORM"
   print_message "-       OS = $BUILD_OS"
   print_message "-     Arch = $BUILD_ARCH"

}  #  End of function  print_env_variables.


#
#
#  Detects the platform we are running the build on.
#
#  Examples:
#    detect_platform
#
function detect_platform() {
  determine_linux_distro || check_macosx || check_windows || die "Unsupported platform";
  print_env_variables
  return 0

}  #  End of function  detect_platform.


